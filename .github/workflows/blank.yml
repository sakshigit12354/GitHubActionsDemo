name: Demo to Deploy OAS to Kong # Specify the name of the deployment

on:
  push:
    branches:
      - main  # Trigger the deployment when pushing to the main branch
env:
  SERVICES: 'My_Service MockService'  # Set SERVICES as an environment variable

jobs:
  Installing_JQ:
    name: Installing_JQ_Name 
    runs-on: ubuntu-latest
    steps:
      - name: Install jq
        run: sudo apt install -y jq

  application_automation:  # Publish the Apps to the dev portal
    name: Automating Application Development for developer
    runs-on: ubuntu-latest  # Use Ubuntu as the operating system for the job
    steps:
      - name: Finds Developer ID and Create App 
        run: |
             NAME="${{ vars.APPDEVELOPERNAME }}"
             NAME="${NAME// /%20}"
             RESPONSE=$(curl -X GET "https://65.2.9.170:8444/developers?username=$NAME" --header "kong-admin-token:password" -k)
             echo $RESPONSE
             DEV_ID=$(echo "$RESPONSE" | jq -r '.data[0].id')
             echo "Developer ID: $DEV_ID"   
             payload=$(echo "{\"name\": \"${{ vars.APPNAME }}\", \"redirect_uri\": \"${{ vars.APPREDIRECT }}\", \"developer\": {\"id\": \"$DEV_ID\"}}" | tr -d '\n')
             appid=$(curl --request POST \
               --url https://65.2.9.170:8444/applications \
               --header 'Content-Type: application/json' \
               --data "$payload" \
               --header "kong-admin-token:password" -k)    
             echo $appid  
             app_id=$(echo "$appid" | jq -r '.id')
             echo "Application ID: $app_id"
             echo "application=$app_id" >> $GITHUB_ENV

      - name: Apply Multi Service Contracts and Activate Request sent for Service Contract
        run: |
          echo ${{ env.application }}         
          echo ${{ vars.APPNAME }}
          for SERVICE in ${SERVICES}
          do
            echo $SERVICE
            p=$(echo "{\"name\": \"application-registration\", \"config\": {\"auto_approve\": false, \"description\": \"Your App description\", \"display_name\": \"$SERVICE\"}}" | tr -d '\n')
            curl -X POST https://65.2.9.170:8444/services/$SERVICE/plugins --header "Content-Type: application/json" --header "kong-admin-token:password" -d "$p" -k       
            SERVICE_ID=$(curl -s -k -X GET "https://65.2.9.170:8444/services/$SERVICE" --header "kong-admin-token:password" | jq -r '.id')
            if [ -z "$SERVICE_IDS" ]; then
              SERVICE_IDS="$SERVICE_ID"
            else
              SERVICE_IDS="$SERVICE_IDS,$SERVICE_ID"
            fi
          done
          echo "Service IDs: $SERVICE_IDS"
          IFS=',' read -ra SERVICE_IDSs <<< "$SERVICE_IDS"
          for ID in "${SERVICE_IDSs[@]}"; do
            curl --location "https://65.2.9.170:8444/applications/${{ env.application }}/application_instances" \
             --header 'Content-Type: application/json' --header "kong-admin-token:password" \
             --data '{
                "service": {
                   "id": "'"$ID"'"
                }
              }' -k 
          done


